openapi: 3.0.0
info:
  title: Chat Support API
  version: 1.0.0
servers:
  - url: /
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        email: { type: string }
        role: { type: string, enum: [admin, doctor, patient] }
    Conversation:
      type: object
      properties:
        id: { type: string }
        participants:
          type: array
          items:
            type: object
            properties:
              _id: { type: string }
              name: { type: string }
              role: { type: string }
    Message:
      type: object
      properties:
        id: { type: string }
        senderId: { type: string }
        conversationId: { type: string }
        text: { type: string }
        read: { type: boolean }
security:
  - bearerAuth: []
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, role]
              properties:
                name: { type: string }
                email: { type: string }
                password: { type: string }
                role: { type: string, enum: [admin, doctor, patient] }
      responses:
        '201': { description: Created }
  /auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string }
                password: { type: string }
            examples:
              loginExample:
                value:
                  email: doctor1@example.com
                  password: secret123
      responses:
        '200': { description: OK }
  /users:
    get:
      summary: List all users (admin)
      security: [{ bearerAuth: [] }]
      responses:
        '200': { description: OK }
  /conversations:
    get:
      summary: List my conversations
      security: [{ bearerAuth: [] }]
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                listConversations:
                  value:
                    - id: "663f0c..."
                      participants:
                        - _id: "663f0a..."
                          name: "Dr. Smith"
                          role: "doctor"
                        - _id: "663f0b..."
                          name: "John Doe"
                          role: "patient"
    post:
      summary: Create a conversation
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                participantIds:
                  type: array
                  items: { type: string }
            examples:
              createConversation:
                value:
                  participantIds: ["663f0a...", "663f0b..."]
      responses:
        '201': { description: Created }
  /messages/{conversationId}:
    get:
      summary: List messages in conversation
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: conversationId
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }
  /messages:
    post:
      summary: Send a message
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [conversationId, text]
              properties:
                conversationId: { type: string }
                text: { type: string }
            examples:
              sendMessage:
                value:
                  conversationId: "663f0c..."
                  text: "Hello, how are you feeling today?"
      responses:
        '201': { description: Created }
  /messages/read/{conversationId}:
    post:
      summary: Mark messages as read in conversation
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: conversationId
          required: true
          schema: { type: string }
      responses:
        '200': { description: OK }


